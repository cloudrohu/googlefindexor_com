# crm/forms.py

from django import forms
# üëá ‡§Ø‡§π‡§æ‡§Å Lead ‡§ï‡•ã ‡§è‡§ï ‡§π‡•Ä ‡§¨‡§æ‡§∞ ‡§∞‡§ñ‡§æ ‡§ó‡§Ø‡§æ ‡§π‡•à
from .models import FollowUp, Lead, Staff, Sale, ProductService 


# =================================================================
#                         1. FOLLOW-UP FORM
# =================================================================
class FollowUpForm(forms.ModelForm):
    class Meta:
        model = FollowUp
        # Voice Recording Field ‡§ï‡•ã Form ‡§Æ‡•á‡§Ç ‡§ú‡•ã‡§°‡§º‡§æ ‡§ó‡§Ø‡§æ
        fields = ['type', 'notes', 'followup_date', 'voice_recording'] 
        widgets = {
            # HTML5 datetime-local widget ‡§ï‡§æ ‡§â‡§™‡§Ø‡•ã‡§ó
            'followup_date': forms.DateTimeInput(attrs={'type': 'datetime-local', 'class': 'form-control'}),
            'notes': forms.Textarea(attrs={'class': 'form-control', 'rows': 3}),
            'type': forms.Select(attrs={'class': 'form-control'}),
            # voice_recording ‡§ï‡•ã Django ‡§Ö‡§™‡§®‡•á ‡§Ü‡§™ ‡§π‡•à‡§Ç‡§°‡§≤ ‡§ï‡§∞‡§§‡§æ ‡§π‡•à
        }

# =================================================================
#                         2. LEAD ASSIGNMENT/STATUS FORM
# =================================================================
class LeadAssignForm(forms.ModelForm):
    # ‡§∏‡§≠‡•Ä ‡§∏‡•ç‡§ü‡§æ‡§´ ‡§ï‡•ã ‡§ö‡•Å‡§®‡§®‡•á ‡§ï‡•á ‡§≤‡§ø‡§è ‡§´‡•Ä‡§≤‡•ç‡§°
    assigned_to = forms.ModelChoiceField(
        queryset=Staff.objects.all(), 
        required=False,
        widget=forms.Select(attrs={'class': 'form-control'})
    ) 
    
    class Meta:
        model = Lead
        # status ‡§´‡•Ä‡§≤‡•ç‡§° ‡§™‡§∞ ‡§≠‡•Ä ‡§´‡•â‡§∞‡•ç‡§Æ-‡§ï‡§Ç‡§ü‡•ç‡§∞‡•ã‡§≤ ‡§ï‡•ç‡§≤‡§æ‡§∏ ‡§ú‡•ã‡§°‡§º‡•á‡§Ç
        fields = ['assigned_to', 'status']
        widgets = {
            'status': forms.Select(attrs={'class': 'form-control'}),
        }


# =================================================================
#                         3. SALE CREATION FORM
# =================================================================
class SaleCreateForm(forms.ModelForm):
    # Sale ‡§Æ‡•â‡§°‡§≤ ‡§Æ‡•á‡§Ç M2M (ManyToManyField) ‡§π‡•ã‡§®‡•á ‡§ï‡•á ‡§ï‡§æ‡§∞‡§£, 'products' ‡§´‡•Ä‡§≤‡•ç‡§° ‡§ï‡•ã 
    # ‡§∏‡•ç‡§™‡§∑‡•ç‡§ü ‡§∞‡•Ç‡§™ ‡§∏‡•á ‡§®‡§ø‡§∞‡•ç‡§¶‡§ø‡§∑‡•ç‡§ü ‡§ï‡§∞‡§®‡§æ ‡§ú‡§º‡§∞‡•Ç‡§∞‡•Ä ‡§π‡•à ‡§î‡§∞ ‡§á‡§∏‡•á ‡§´‡•â‡§∞‡•ç‡§Æ-‡§ï‡§Ç‡§ü‡•ç‡§∞‡•ã‡§≤ ‡§ï‡•ç‡§≤‡§æ‡§∏ ‡§∏‡•á ‡§Ö‡§≤‡§ó ‡§∞‡§ñ‡§®‡§æ ‡§π‡•ã‡§ó‡§æ
    products = forms.ModelMultipleChoiceField(
        queryset=ProductService.objects.all(),
        # CheckboxSelectMultiple ‡§ï‡•ã ‡§ï‡§∏‡•ç‡§ü‡§Æ ‡§∏‡•ç‡§ü‡§æ‡§á‡§≤‡§ø‡§Ç‡§ó ‡§ï‡•Ä ‡§Ü‡§µ‡§∂‡•ç‡§Ø‡§ï‡§§‡§æ ‡§π‡•ã‡§§‡•Ä ‡§π‡•à
        widget=forms.CheckboxSelectMultiple, 
        label="‡§¨‡•á‡§ö‡•á ‡§ó‡§è ‡§â‡§§‡•ç‡§™‡§æ‡§¶/‡§∏‡•á‡§µ‡§æ‡§è‡§Ç",
        required=False
    )

    class Meta:
        model = Sale
        # lead ‡§ï‡•ã fields ‡§Æ‡•á‡§Ç ‡§∂‡§æ‡§Æ‡§ø‡§≤ ‡§®‡§π‡•Ä‡§Ç ‡§ï‡§ø‡§Ø‡§æ ‡§ú‡§æ‡§§‡§æ ‡§π‡•à, ‡§ï‡•ç‡§Ø‡•ã‡§Ç‡§ï‡§ø ‡§á‡§∏‡•á view ‡§Æ‡•á‡§Ç ‡§ú‡•ã‡§°‡§º‡§æ ‡§ú‡§æ‡§è‡§ó‡§æ
        fields = ['status', 'amount', 'sale_date', 'products'] 
        
        widgets = {
            'sale_date': forms.DateInput(attrs={'type': 'date', 'class': 'form-control'}),
            'amount': forms.NumberInput(attrs={'class': 'form-control'}),
            'status': forms.Select(attrs={'class': 'form-control'}),
        }